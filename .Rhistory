return(NA)
}
scores$name <- name
scores$year <- year
scores[seq(from=1, to=nrow(scores), by=2),]
})
clean_data <- clean_data[!is.na(clean_data)]
clean_data <- clean_data[which(sapply(clean_data, function(x){!("TEE TIME" %in% names(x))}))]
clean_data <- clean_data[which(sapply(sapply(clean_data, names), length) == 13)]
data <- do.call(rbind, clean_data)
names(clean_data[[1]])
unique(unlist(lapply(clean_data, names)))
data <- do.call(rbind.fill, clean_data)
rbind.fill
library(plyr)
data <- do.call(rbind.fill, clean_data)
data
View(data)
ncol(data)
View(data[-16])
data <- do.call(rbind.fill, clean_data)[c(-2, -14, -15, -16)]
View(data)
write.csv(data, "golf_data.csv")
500000/1300000000
500000/4700000000
clean_data <- lapply(all_data, function(tourn) {
if(identical(tourn[[1]], character(0)) | identical(tourn[[3]], list())) {
return(NA)
}
name <- tourn[[1]]
date_str <- tourn[[2]]
year <- as.numeric(str_sub(date_str, length(date_str)-5))
scores <- tourn[[3]][[1]]
if(nrow(scores) == 0) {
return(NA)
}
scores$name <- name
scores$year <- year
scores[seq(from=1, to=nrow(scores), by=2),]
})
clean_data <- clean_data[!is.na(clean_data)]
clean_data <- clean_data[which(sapply(clean_data, function(x){!("TEE TIME" %in% names(x))}))]
clean_data <- clean_data[which(sapply(sapply(clean_data, names), length) == 13)]
data <- do.call(rbind.fill, clean_data)[c(-2, -14, -15, -16)]
View(data)
clean_data <- lapply(all_data, function(tourn) {
if(identical(tourn[[1]], character(0)) | identical(tourn[[3]], list())) {
return(NA)
}
name <- tourn[[1]]
date_str <- tourn[[2]]
year <- as.numeric(str_sub(date_str, length(date_str)-5))
scores <- tourn[[3]][[1]]
if(nrow(scores) == 0) {
return(NA)
}
scores$name <- name
scores$year <- year
scores[seq(from=1, to=nrow(scores), by=2),]
})
clean_data <- clean_data[!is.na(clean_data)]
clean_data <- clean_data[which(sapply(clean_data, function(x){!("TEE TIME" %in% names(x))}))]
data <- do.call(rbind.fill, clean_data)[c(-2, -14, -15, -16)]
clean_data <- lapply(all_data, function(tourn) {
if(identical(tourn[[1]], character(0)) | identical(tourn[[3]], list())) {
return(NA)
}
name <- tourn[[1]]
date_str <- tourn[[2]]
year <- as.numeric(str_sub(date_str, length(date_str)-5))
scores <- tourn[[3]][[1]]
if(nrow(scores) == 0) {
return(NA)
}
scores$name <- name
scores$year <- year
scores[seq(from=1, to=nrow(scores), by=2),]
})
clean_data <- clean_data[!is.na(clean_data)]
clean_data <- clean_data[which(sapply(clean_data, function(x){!("TEE TIME" %in% names(x))}))]
clean_data <- clean_data[which(sapply(sapply(clean_data, names), length) < 1000)]
data <- do.call(rbind.fill, clean_data)[c(-2, -14, -15, -16)]
View(data)
data %>% filter(!is.na(X1))
data %>% filter(!is.na(X1)) %>% pull(name)
mean(data$R1)
mean(as.numeric(data$R1))
mean(as.numeric(data$R1), rm.na=T)
mean(as.numeric(data$R1), na.rm =T)
mean(data$R1, na.rm =T)
data$R1 <- as.numeric(data$R1)
?as.numeric
mean(data %>% pull(R1))
mean(data %>% pull(R1), na.rm = T)
names(data)
unique(data$THRU)
View(data[1:13])
View(data[1:12])
data %>% filter(year == "2018") %>% group_by(PLAYER) %>% summarise(FCP = sum(`FEDEX PTS`))
data %>% filter(year == "2018")
data %>%
filter(year == "2018") %>%
group_by(PLAYER) %>%
summarise(FCP = sum(`FEDEX PTS`, rm.na=T))
data %>%
filter(year == "2018") %>%
group_by(PLAYER) %>%
pull(`FEDEX PTS`)
data %>%
filter(year == "2018") %>%
group_by(PLAYER) %>%
summarise(PTS = sum(`FEDEX PTS`))
data %>%
filter(year == "2018") %>%
group_by(PLAYER) %>%
summarise(PTS = sum(`FEDEX PTS`, rm.na=T))
data %>%
filter(year == "2018") %>%
filter(PLAYER = "Dustin Johnson")
data %>%
filter(year == "2018") %>%
filter(PLAYER == "Dustin Johnson")
data$R1 <- as.numeric(data$R1)
data$R2 <- as.numeric(data$R2)
data$R3 <- as.numeric(data$R3)
data$R4 <- as.numeric(data$R4)
data$`FEDEX PTS` <- as.numeric(data$`FEDEX PTS`)
data %>%
filter(year == "2018") %>%
group_by(PLAYER) %>%
summarise(PTS = sum(`FEDEX PTS`))
sum(data$`FEDEX PTS`)
sum(data$`FEDEX PTS`, na.rm=T)
data %>%
filter(year == "2018") %>%
group_by(PLAYER) %>%
summarise(PTS = sum(`FEDEX PTS`, na.rm=T))
data %>%
filter(year == "2018") %>%
dplyr::group_by(PLAYER) %>%
summarise(PTS = sum(`FEDEX PTS`, na.rm=T))
data %>%
filter(year == "2018") %>%
group_by(PLAYER) %>%
dplyr::summarise(PTS = sum(`FEDEX PTS`))
data %>%
filter(year == "2018") %>%
group_by(PLAYER) %>%
dplyr::summarise(PTS = sum(`FEDEX PTS`, na.rm=T))
data %>%
filter(year == "2018") %>%
group_by(PLAYER) %>%
dplyr::summarise(PTS = sum(`FEDEX PTS`, na.rm=T)) %>%
as.data.frame
fedex_cup_points <- data %>%
filter(year == "2018") %>%
group_by(PLAYER) %>%
dplyr::summarise(PTS = sum(`FEDEX PTS`, na.rm=T)) %>%
arrange(desc(PTS)) %>%
as.data.frame
View(fedex_cup_points)
clean_data <- lapply(all_data, function(tourn) {
if(identical(tourn[[1]], character(0)) | identical(tourn[[3]], list())) {
return(NA)
}
name <- tourn[[1]]
date_str <- tourn[[2]]
year <- as.numeric(str_sub(date_str, length(date_str)-5))
scores <- tourn[[3]][[1]]
if(nrow(scores) == 0) {
return(NA)
}
scores$name <- name
scores$year <- year
scores[seq(from=1, to=nrow(scores), by=2),]
})
clean_data <- clean_data[!is.na(clean_data)]
clean_data <- clean_data[which(sapply(clean_data, function(x){!("TEE TIME" %in% names(x))}))]
clean_data <- clean_data[which(sapply(sapply(clean_data, names), length) < 1000)]
data <- do.call(rbind.fill, clean_data)[c(-2, -14, -15, -16)]
data$R1 <- as.numeric(data$R1)
data$R2 <- as.numeric(data$R2)
data$R3 <- as.numeric(data$R3)
data$R4 <- as.numeric(data$R4)
data$`FEDEX PTS` <- as.numeric(data$`FEDEX PTS`)
fedex_cup_points <- data %>%
filter(year == "2018") %>%
group_by(PLAYER) %>%
dplyr::summarise(PTS = sum(`FEDEX PTS`, na.rm=T)) %>%
arrange(desc(PTS)) %>%
as.data.frame
library(BRRR)
BRRR::skrrrahh(14)
BRRR::skrrrahh(23)
BRRR::skrrrahh(19)
BRRR::skrrrahh(17)
BRRR::skrrrahh(18)
BRRR::skrrrahh(33)
BRRR::skrrrahh(34)
BRRR::skrrrahh(35)
library(dplyr)
library(rvest)
library(stringr)
passing_home <- "http://www.espn.com/nfl/weekly/leaders/_/type/passing"
passing_urls <- passing_home %>%
read_html() %>%
html_nodes(xpath='//*[@id="content"]/div[2]/div/div/div[2]/form/select/option') %>%
html_attr("href")
passing_urls
passing_urls <- passing_home %>%
read_html() %>%
html_nodes(xpath='//*[@id="content"]/div[2]/div/div/div[2]/form/select/option') %>%
html_attr("value")
passing_urls
passing_urls <- (passing_home %>%
read_html() %>%
html_nodes(xpath='//*[@id="content"]/div[2]/div/div/div[2]/form/select/option') %>%
html_attr("value"))[-1]
passing_urls
passing_regular_season_urls <- passing_urls[!str_detect(passing_urls, "seasontype")]
passing_regular_season_urls
passing_post_season_urls <- passing_urls[str_detect(passing_urls, "seasontype")]
passing_post_season_urls
url %>%
read_html() %>%
html_nodes(xpath='//*[@id="content"]/div[2]/div/div/div[2]/a') %>%
html_attr("href")
"http://www.espn.com/nfl/weekly/leaders/_/type/passing" %>%
read_html() %>%
html_nodes(xpath='//*[@id="content"]/div[2]/div/div/div[2]/a') %>%
html_attr("href")
"http://www.espn.com/nfl/weekly/leaders/_/year/2017/type/passing" %>%
read_html() %>%
html_nodes(xpath='//*[@id="content"]/div[2]/div/div/div[2]/a') %>%
html_attr("href")
year_2017 <- "http://www.espn.com/nfl/weekly/leaders/_/year/2017/type/passing" %>%
read_html() %>%
html_nodes(xpath='//*[@id="content"]/div[2]/div/div/div[2]/a') %>%
html_attr("href")
year_2017
year_2017[str_detect(year_2017, "passing")]
year_2017[str_detect(year_2017[str_detect(year_2017, "passing")], "week")]
year_2017[-c(1:5)]
passing_regular_season_all_urls[0]
passing_regular_season_all_urls[1]
passing_regular_season_urls[1]
passing_regular_season_urls <- sapply(passing_urls[!str_detect(passing_urls, "seasontype")], function(url) {
str_c("http:", url)
})
passing_regular_season_urls
unname(passing_regular_season_urls <- sapply(passing_urls[!str_detect(passing_urls, "seasontype")], function(url) {
str_c("http:", url)
}))
passing_regular_season_urls[1]
unname(passing_regular_season_urls <- sapply(passing_urls[!str_detect(passing_urls, "seasontype")], function(url) {
str_c("http:", url)
}))
passing_regular_season_urls[1]
as.character(passing_regular_season_urls <- sapply(passing_urls[!str_detect(passing_urls, "seasontype")], function(url) {
str_c("http:", url)
}))
passing_regular_season_urls[1]
passing_regular_season_urls <- unname(sapply(passing_urls[!str_detect(passing_urls, "seasontype")], function(url) {
str_c("http:", url)
}))
passing_regular_season_urls[1]
passing_regular_season_urls[2]
test_url <- passing_regular_season_urls[2]
year_2017 <- test_url %>%
read_html() %>%
html_nodes(xpath='//*[@id="content"]/div[2]/div/div/div[2]/a') %>%
html_attr("href")
year_2017
year_2017 <- test_url %>%
read_html() %>%
html_nodes(xpath='//*[@id="content"]/div[2]/div/div/div[2]/a') %>%
html_text()
year_2017
is.numeric("8")
as.numeric(year_2017)
year_2017[!is.na(as.numeric(year_2017))]
?as.numeric
as.character(1:16)
identical(year_2017[!is.na(as.numeric(year_2017))], as.character(1:16))
suppressWarnings(identical(year_2017[!is.na(as.numeric(year_2017))], as.character(1:16)))
weeks <- test_url %>%
read_html() %>%
html_nodes(xpath='//*[@id="content"]/div[2]/div/div/div[2]/a') %>%
html_text()
weeks
weeks <- test_url %>%
read_html() %>%
html_nodes(xpath='//*[@id="content"]/div[2]/div/div/div[2]/*') %>%
html_text()
weeks
weeks <- test_url %>%
read_html() %>%
html_nodes(xpath='//*[@id="content"]/div[2]/div/div/div[2]') %>%
html_text()
weeks
str_split(weeks, ":")
weeks <- str_split(test_url %>%
read_html() %>%
html_nodes(xpath='//*[@id="content"]/div[2]/div/div/div[2]') %>%
html_text(), ":")
weeks
weeks[3]
weeks[[1]][3]
weeks[[1]][3][1:len(weeks[[1]][3])]
weeks[[1]][3][1:length(weeks[[1]][3])]
weeks[[1]][3][1:length(weeks[[1]][3])-6]
weeks[[1]][3][1,length(weeks[[1]][3])-6]
weeks[[1]][3][c(1,length(weeks[[1]][3])-6)]
c(1,length(weeks[[1]][3])-6)
length(weeks[[1]][3]))
length(weeks[[1]][3])
length(weeks[[1]][3])-6
str_length(weeks[[1]][3])
str_length(weeks[[1]][3])-6
weeks[[1]][3][1:str_length(weeks[[1]][3])-6]
1:str_length(weeks[[1]][3])-6
str_length(weeks[[1]][3])-6
weeks[[1]][3][1:(str_length(weeks[[1]][3])-6)]
1:(str_length(weeks[[1]][3])-6)
weeks[[1]][3]
str_sub(weeks[[1]][3], 2:(str_length(weeks[[1]][3])-6))
str_sub(weeks[[1]][3], 2, (str_length(weeks[[1]][3])-6))
str_split(str_sub(weeks[[1]][3], 2, (str_length(weeks[[1]][3])-6)), ":")
str_split(str_sub(weeks[[1]][3], 2, (str_length(weeks[[1]][3])-6)), "|")
str_split(str_sub(weeks[[1]][3], 2, (str_length(weeks[[1]][3])-6)), "|")[[1]]
str_split(str_sub(weeks[[1]][3], 2, (str_length(weeks[[1]][3])-6)), "|")[[1]][!is.na(as.numeric(str_split(str_sub(weeks[[1]][3], 2, (str_length(weeks[[1]][3])-6)), "|")[[1]]))]
str_split(str_sub(weeks[[1]][3], 2, (str_length(weeks[[1]][3])-6)), "|")
str_sub(weeks[[1]][3], 2, (str_length(weeks[[1]][3])-6))
str_split(str_sub(weeks[[1]][3], 2, (str_length(weeks[[1]][3])-6)), "|")
str_split(str_sub(weeks[[1]][3], 2, (str_length(weeks[[1]][3])-6)), "|")
str_split(str_sub(weeks[[1]][3], 2, (str_length(weeks[[1]][3])-6)), "\|")
str_split(str_sub(weeks[[1]][3], 2, (str_length(weeks[[1]][3])-6)), '|')
str_split(str_sub(weeks[[1]][3], 2, (str_length(weeks[[1]][3])-6)), ' ')
str_split(str_sub(weeks[[1]][3], 2, (str_length(weeks[[1]][3])-6)), ' ')[[1]]
weeks <- str_split(str_sub(weeks[[1]][3], 2, (str_length(weeks[[1]][3])-6)), ' ')[[1]]
weeks
weeks[!(weeks == "|")]
weeks <- as.numeric(weeks[!(weeks == "|")])
weeks
passing_regular_season_all_urls <- lapply(passing_regular_season_urls, function(url) {
weeks <- str_split(url %>%
read_html() %>%
html_nodes(xpath='//*[@id="content"]/div[2]/div/div/div[2]') %>%
html_text(), ":")
weeks <- str_split(str_sub(weeks[[1]][3], 2, (str_length(weeks[[1]][3])-6)), ' ')[[1]]
weeks <- as.numeric(weeks[!(weeks == "|")])
weeks
})
passing_regular_season_all_urls
passing_regular_season_urls[3]
passing_regular_season_all_urls
passing_regular_season_all_urls
passing_regular_season_all_urls <- lapply(passing_regular_season_urls, function(url) {
weeks <- str_split(url %>%
read_html() %>%
html_nodes(xpath='//*[@id="content"]/div[2]/div/div/div[2]') %>%
html_text(), ":")
weeks <- str_split(str_sub(weeks[[1]][3], 2, (str_length(weeks[[1]][3])-6)), ' ')[[1]]
weeks <- as.numeric(weeks[!(weeks == "|")])
urls <- unname(sapply(weeks, function(week){
str_c(url, "/week/", week)
}))
})
passing_regular_season_all_urls
passing_regular_season_all_urls <- unlist(lapply(passing_regular_season_urls, function(url) {
weeks <- str_split(url %>%
read_html() %>%
html_nodes(xpath='//*[@id="content"]/div[2]/div/div/div[2]') %>%
html_text(), ":")
weeks <- str_split(str_sub(weeks[[1]][3], 2, (str_length(weeks[[1]][3])-6)), ' ')[[1]]
weeks <- as.numeric(weeks[!(weeks == "|")])
urls <- unname(sapply(weeks, function(week){
str_c(url, "/week/", week)
}))
}))
passing_regular_season_all_urls
lapply(passing_regular_season_all_urls, function(url) {
url %>%
read_html() %>%
html_nodex(xpath='//*[@id="my-players-table"]/div[1]/div[1]/table[2]') %>%
html_table() %>%
as.data.frame
})
lapply(passing_regular_season_all_urls, function(url) {
url %>%
read_html() %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div[1]/table[2]') %>%
html_table() %>%
as.data.frame
})
passing_data <- lapply(passing_regular_season_all_urls, function(url) {
url %>%
read_html() %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div[1]/table[2]') %>%
html_table() %>%
as.data.frame
})
do.call(rbind, passing_data)
passing_data <- do.call(rbind, passing_data)
View(passing_data)
passing_data <- lapply(passing_regular_season_all_urls, function(url) {
url %>%
read_html() %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div[1]/table[2]') %>%
html_table() %>%
as.data.frame
})
passing_data[[1]]
data_1 <- passing_data[[1]]
names <- vector(passing_data[2])
names <- vector(passing_data[2,])
names <- vector(data_![2,])
names <- vector(data_1[2,])
data_1[2,]
names <- as.vector(data_1[2,])
names
names(data_1) <- names
head(data_1)
passing_data <- lapply(passing_regular_season_all_urls, function(url) {
frame <- url %>%
read_html() %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div[1]/table[2]') %>%
html_table() %>%
as.data.frame
names(frame) <- as.vector(frame[2,])
frame[-c(1,2),]
})
passing_data
passing_data <- do.call(rbind, passing_data)
View(passing_data)
View(passing_data %>% filter(PLAYER == "Mitchell Trubisky, QB"))
View(passing_data %>% filter(PLAYER == "Tom Brady, QB"))
mean(passing_data %>% filter(PLAYER == "Tom Brady, QB") %>% RAT)
mean(passing_data %>% filter(PLAYER == "Tom Brady, QB") %>% pull(RAT))
mean(as.numeric(passing_data %>% filter(PLAYER == "Tom Brady, QB") %>% pull(RAT)))
mean(as.numeric(passing_data %>% filter(PLAYER == "Tom Brady, QB") %>% pull(RK)))
passing_data %>% pull(ATT)
as.numeric(passing_data %>% pull(ATT))
mean(as.numeric(passing_data %>% pull(ATT)))
mean(as.numeric(passing_data %>% pull(RAT)))
sapply(passing_data$RESULT, function(x){str_sub(x,1,2))})
str_sub("L 48-40 vs. TB", 1,2)
str_sub("L 48-40 vs. TB", 1)
str_sub("L 48-40 vs. TB", 1,1)
sapply(passing_data$RESULT, function(x){str_sub("L 48-40 vs. TB", 1,1)})
unname(sapply(passing_data$RESULT, function(x){str_sub("L 48-40 vs. TB", 1,1)}))
passing_data$WINLOSS <- unname(sapply(passing_data$RESULT, function(x){str_sub("L 48-40 vs. TB", 1,1)}))
res <- W 24-6 at ARI
res <- "W 24-6 at ARI"
res
split(res, ":")
split(res, "-")
str_split(res, "-")
str_split(str_split(res, "-"), " ")
str_split(str_split(res, "-")[[1]], " ")
unlist(str_split(str_split(res, "-")[[1]], " "))
passin_data$WINSCORE <- unname(sapply(passing_data$RESULT, function(res){
unlist(str_split(str_split(res, "-")[[1]], " "))[2]
}))
passing_data$WINSCORE <- unname(sapply(passing_data$RESULT, function(res){
unlist(str_split(str_split(res, "-")[[1]], " "))[2]
}))
passing_data$LOSSSCORE <- unname(sapply(passing_data$RESULT, function(res){
unlist(str_split(str_split(res, "-")[[1]], " "))[3]
}))
passing_data$OPPONENT <- unname(sapply(passing_data$RESULT, function(res){
unlist(str_split(str_split(res, "-")[[1]], " "))[5]
}))
passing_data$OPPONENT <- unname(sapply(passing_data$RESULT, function(res){
unlist(str_split(str_split(res, "-")[[1]], " "))[6]
}))
View(passing_data)
passing_data$RESULT[1]
unlist(str_split(str_split(passing_data$RESULT[1], "-")[[1]], " "))
unique(passing_data$WINLOSS)
passing_data$WINLOSS <- unname(sapply(passing_data$RESULT, function(x){str_sub(x, 1,1)}))
unique(passing_data$WINLOSS)
View(passing_data %>% filter(WINLOSS == "T"))
unique(passing_data %>% filter(WINLOSS == "T") %>% pull(RESULT))
mean(passing_data %>% filter(WINLOSS == "T") %>% pull(WINSCORE))
mean(as.numeric(passing_data %>% filter(WINLOSS == "T") %>% pull(WINSCORE)))
median(as.numeric(passing_data %>% filter(WINLOSS == "T") %>% pull(WINSCORE)))
dist(as.numeric(passing_data %>% filter(WINLOSS == "T") %>% pull(WINSCORE)))
hist(as.numeric(passing_data %>% filter(WINLOSS == "T") %>% pull(WINSCORE)))
hist(as.numeric(passing_data %>% filter(WINLOSS == "T") %>% pull(WINSCORE)), bins=10)
hist(as.numeric(passing_data %>% filter(WINLOSS == "T") %>% pull(WINSCORE)))
hist(as.numeric(passing_data %>% filter(WINLOSS == "T") %>% pull(WINSCORE)))
str_split("Ben Roethlisberger, QB", ", ")
str_split("Ben Roethlisberger, QB", ", ")[[1]]
str_split("Ben Roethlisberger, QB", ", ")[[1]][1]
passing_data$NAME <- unname(sapply(passing_data$PLAYER, function(p) {
str_split(p, ", ")[[1]][1]
}))
passing_data$POS <- unname(sapply(passing_data$PLAYER, function(p) {
str_split(p, ", ")[[1]][2]
}))
passing_data$PLAYER <- NA
rm(passing_data$PLAYER)
passing_data$PLAYER <- NULL
unique(passing_data$POS)
View(passing_data %>% arrage(RAT))
View(passing_data %>% arrange(RAT))
passing_data$YDS <- as.numeric(passing_data$YDS)
View(passing_data %<% group_by(NAME) %>% summarise(sum(YDS)))
View(passing_data %>% group_by(NAME) %>% summarise(sum(YDS)))
View(passing_data %>% group_by(NAME) %>% summarise(YDS = sum(YDS)) %>% arrange(desc(YDS)))
View(passing_data %>% group_by(TEAM) %>% summarise(YDS = sum(YDS)) %>% arrange(desc(YDS)))
